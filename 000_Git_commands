**Create a New Branch**
To complete daily exercises, my suggestion is to create a separate branch to 
house your exercise folder or any other changes you make. This will keep your 
master branch clean at all times, which means your master will always be 
similar to the original master.

git checkout -b exercise-solutions # `-b` creates the branch if it does not exist

**Structure Exercise Solutions**
In your new branch, you can use files/folders to structure your solutions to 
daily exercises

mkdir -p solutions/day-01 # `-p` helps create nested directories
touch solutions/day-01/level1.js # touch creates a file

**Commit Exercise Solutions**
Commit your solutions to your Fork

git add solutions/day-01/level1.js
git commit -m "chore: exercise level1 complete"
git push origin exercise-solutions # branch `exercise-solutions` was created earlier

**Update your Fork Daily**
This repo will be updated daily throughout the month. When a new day's 
content becomes available, you can update your forked copy with the steps 
below:

# 1. switch to master branch
git checkout master
# 2. check if your local copy has a link to original `...Asabeneh/30-Days-Of-React.git`
git remote -v
# 3. if not, add a link to original, you can choose any name for the link or use `upstream`
git remote add upstream git@github.com:Asabeneh/30-Days-Of-React.git
# 4. check again to confirm link added
git remote -v
# 5. now you can fetch updates from original repo, assuming you named this `upstream`
git fetch upstream
# 6. merge the updates to your local master branch
git merge upstream/master master
# 7. push the merged updates to your Forked copy on GitHub
git push origin master

Note that the updates are only applied to the master branch. If you wish to 
update any other branch, repeat steps 6-7 with the branch name. See snippet 
below for exercise-solutions branch

git merge upstream/master exercise-solutions
git push origin exercise-solutions